{"ast":null,"code":"import { InjectionToken } from '@angular/core';\nimport { isPlatformServer } from '@angular/common';\nimport { Observable, queueScheduler, asyncScheduler } from 'rxjs';\nimport { subscribeOn, observeOn, tap } from 'rxjs/operators';\nexport const RealtimeDatabaseURL = new InjectionToken('angularfire2.realtimeDatabaseURL');\nexport const DATABASE_URL = RealtimeDatabaseURL;\nfunction noop() {}\nexport class ɵZoneScheduler {\n  constructor(zone, delegate = queueScheduler) {\n    this.zone = zone;\n    this.delegate = delegate;\n  }\n  now() {\n    return this.delegate.now();\n  }\n  schedule(work, delay, state) {\n    const targetZone = this.zone;\n    const workInZone = function (state) {\n      targetZone.runGuarded(() => {\n        work.apply(this, [state]);\n      });\n    };\n    return this.delegate.schedule(workInZone, delay, state);\n  }\n}\nexport class ɵBlockUntilFirstOperator {\n  constructor(zone) {\n    this.zone = zone;\n    this.task = null;\n  }\n  call(subscriber, source) {\n    const unscheduleTask = this.unscheduleTask.bind(this);\n    this.task = this.zone.run(() => Zone.current.scheduleMacroTask('firebaseZoneBlock', noop, {}, noop, noop));\n    return source.pipe(tap(unscheduleTask, unscheduleTask, unscheduleTask)).subscribe(subscriber).add(unscheduleTask);\n  }\n  unscheduleTask() {\n    if (this.task != null && this.task.state === 'scheduled') {\n      this.task.invoke();\n      this.task = null;\n    }\n  }\n}\nexport class ɵAngularFireSchedulers {\n  constructor(ngZone) {\n    this.ngZone = ngZone;\n    this.outsideAngular = ngZone.runOutsideAngular(() => new ɵZoneScheduler(Zone.current));\n    this.insideAngular = ngZone.run(() => new ɵZoneScheduler(Zone.current, asyncScheduler));\n  }\n}\nexport function ɵkeepUnstableUntilFirstFactory(schedulers, platformId) {\n  return function keepUnstableUntilFirst(obs$) {\n    if (isPlatformServer(platformId)) {\n      obs$ = obs$.lift(new ɵBlockUntilFirstOperator(schedulers.ngZone));\n    }\n    return obs$.pipe(subscribeOn(schedulers.outsideAngular), observeOn(schedulers.insideAngular));\n  };\n}\nexport const runOutsideAngular = zone => obs$ => {\n  return new Observable(subscriber => {\n    return zone.runOutsideAngular(() => {\n      runInZone(zone)(obs$).subscribe(subscriber);\n    });\n  });\n};\nexport const runInZone = zone => obs$ => {\n  return new Observable(subscriber => {\n    return obs$.subscribe(value => zone.run(() => subscriber.next(value)), error => zone.run(() => subscriber.error(error)), () => zone.run(() => subscriber.complete()));\n  });\n};\nexport class FirebaseZoneScheduler {\n  constructor(zone, platformId) {\n    this.zone = zone;\n    this.platformId = platformId;\n  }\n  schedule(...args) {\n    return this.zone.runGuarded(function () {\n      return queueScheduler.schedule.apply(queueScheduler, args);\n    });\n  }\n  keepUnstableUntilFirst(obs$) {\n    if (isPlatformServer(this.platformId)) {\n      return new Observable(subscriber => {\n        const noop = () => {};\n        const task = Zone.current.scheduleMacroTask('firebaseZoneBlock', noop, {}, noop, noop);\n        obs$.subscribe(next => {\n          if (task.state === 'scheduled') {\n            task.invoke();\n          }\n          ;\n          subscriber.next(next);\n        }, error => {\n          if (task.state === 'scheduled') {\n            task.invoke();\n          }\n          subscriber.error(error);\n        }, () => {\n          if (task.state === 'scheduled') {\n            task.invoke();\n          }\n          subscriber.complete();\n        });\n      });\n    } else {\n      return obs$;\n    }\n  }\n  runOutsideAngular(obs$) {\n    return new Observable(subscriber => {\n      return this.zone.runOutsideAngular(() => {\n        return obs$.subscribe(value => this.zone.run(() => subscriber.next(value)), error => this.zone.run(() => subscriber.error(error)), () => this.zone.run(() => subscriber.complete()));\n      });\n    });\n  }\n}\nconst noopFunctions = ['ngOnDestroy'];\nexport const ɵlazySDKProxy = (klass, observable, zone) => {\n  return new Proxy(klass, {\n    get: (_, name) => zone.runOutsideAngular(() => {\n      if (klass[name]) {\n        return klass[name];\n      }\n      if (noopFunctions.includes(name)) {\n        return () => {};\n      }\n      let promise = observable.toPromise().then(mod => {\n        const ret = mod && mod[name];\n        if (typeof ret == 'function') {\n          return ret.bind(mod);\n        } else if (ret && ret.then) {\n          return ret.then(res => zone.run(() => res));\n        } else {\n          return zone.run(() => ret);\n        }\n      });\n      return new Proxy(() => undefined, {\n        get: (_, name) => promise[name],\n        apply: (self, _, args) => promise.then(it => it && it(...args))\n      });\n    })\n  });\n};","map":{"version":3,"names":["InjectionToken","isPlatformServer","Observable","queueScheduler","asyncScheduler","subscribeOn","observeOn","tap","RealtimeDatabaseURL","DATABASE_URL","noop","ɵZoneScheduler","constructor","zone","delegate","now","schedule","work","delay","state","targetZone","workInZone","runGuarded","apply","ɵBlockUntilFirstOperator","task","call","subscriber","source","unscheduleTask","bind","run","Zone","current","scheduleMacroTask","pipe","subscribe","add","invoke","ɵAngularFireSchedulers","ngZone","outsideAngular","runOutsideAngular","insideAngular","ɵkeepUnstableUntilFirstFactory","schedulers","platformId","keepUnstableUntilFirst","obs$","lift","runInZone","value","next","error","complete","FirebaseZoneScheduler","args","noopFunctions","ɵlazySDKProxy","klass","observable","Proxy","get","_","name","includes","promise","toPromise","then","mod","ret","res","undefined","self","it"],"sources":["C:/Users/usuario/Documents/Estudo/AngularCrudLogin/TelaLogin/projetoLogin/node_modules/@angular/fire/__ivy_ngcc__/es2015/angularfire2.js"],"sourcesContent":["import { InjectionToken } from '@angular/core';\nimport { isPlatformServer } from '@angular/common';\nimport { Observable, queueScheduler, asyncScheduler } from 'rxjs';\nimport { subscribeOn, observeOn, tap } from 'rxjs/operators';\nexport const RealtimeDatabaseURL = new InjectionToken('angularfire2.realtimeDatabaseURL');\nexport const DATABASE_URL = RealtimeDatabaseURL;\nfunction noop() { }\nexport class ɵZoneScheduler {\n    constructor(zone, delegate = queueScheduler) {\n        this.zone = zone;\n        this.delegate = delegate;\n    }\n    now() {\n        return this.delegate.now();\n    }\n    schedule(work, delay, state) {\n        const targetZone = this.zone;\n        const workInZone = function (state) {\n            targetZone.runGuarded(() => {\n                work.apply(this, [state]);\n            });\n        };\n        return this.delegate.schedule(workInZone, delay, state);\n    }\n}\nexport class ɵBlockUntilFirstOperator {\n    constructor(zone) {\n        this.zone = zone;\n        this.task = null;\n    }\n    call(subscriber, source) {\n        const unscheduleTask = this.unscheduleTask.bind(this);\n        this.task = this.zone.run(() => Zone.current.scheduleMacroTask('firebaseZoneBlock', noop, {}, noop, noop));\n        return source.pipe(tap(unscheduleTask, unscheduleTask, unscheduleTask)).subscribe(subscriber).add(unscheduleTask);\n    }\n    unscheduleTask() {\n        if (this.task != null && this.task.state === 'scheduled') {\n            this.task.invoke();\n            this.task = null;\n        }\n    }\n}\nexport class ɵAngularFireSchedulers {\n    constructor(ngZone) {\n        this.ngZone = ngZone;\n        this.outsideAngular = ngZone.runOutsideAngular(() => new ɵZoneScheduler(Zone.current));\n        this.insideAngular = ngZone.run(() => new ɵZoneScheduler(Zone.current, asyncScheduler));\n    }\n}\nexport function ɵkeepUnstableUntilFirstFactory(schedulers, platformId) {\n    return function keepUnstableUntilFirst(obs$) {\n        if (isPlatformServer(platformId)) {\n            obs$ = obs$.lift(new ɵBlockUntilFirstOperator(schedulers.ngZone));\n        }\n        return obs$.pipe(subscribeOn(schedulers.outsideAngular), observeOn(schedulers.insideAngular));\n    };\n}\nexport const runOutsideAngular = (zone) => (obs$) => {\n    return new Observable(subscriber => {\n        return zone.runOutsideAngular(() => {\n            runInZone(zone)(obs$).subscribe(subscriber);\n        });\n    });\n};\nexport const runInZone = (zone) => (obs$) => {\n    return new Observable(subscriber => {\n        return obs$.subscribe(value => zone.run(() => subscriber.next(value)), error => zone.run(() => subscriber.error(error)), () => zone.run(() => subscriber.complete()));\n    });\n};\nexport class FirebaseZoneScheduler {\n    constructor(zone, platformId) {\n        this.zone = zone;\n        this.platformId = platformId;\n    }\n    schedule(...args) {\n        return this.zone.runGuarded(function () { return queueScheduler.schedule.apply(queueScheduler, args); });\n    }\n    keepUnstableUntilFirst(obs$) {\n        if (isPlatformServer(this.platformId)) {\n            return new Observable(subscriber => {\n                const noop = () => { };\n                const task = Zone.current.scheduleMacroTask('firebaseZoneBlock', noop, {}, noop, noop);\n                obs$.subscribe(next => {\n                    if (task.state === 'scheduled') {\n                        task.invoke();\n                    }\n                    ;\n                    subscriber.next(next);\n                }, error => {\n                    if (task.state === 'scheduled') {\n                        task.invoke();\n                    }\n                    subscriber.error(error);\n                }, () => {\n                    if (task.state === 'scheduled') {\n                        task.invoke();\n                    }\n                    subscriber.complete();\n                });\n            });\n        }\n        else {\n            return obs$;\n        }\n    }\n    runOutsideAngular(obs$) {\n        return new Observable(subscriber => {\n            return this.zone.runOutsideAngular(() => {\n                return obs$.subscribe(value => this.zone.run(() => subscriber.next(value)), error => this.zone.run(() => subscriber.error(error)), () => this.zone.run(() => subscriber.complete()));\n            });\n        });\n    }\n}\nconst noopFunctions = ['ngOnDestroy'];\nexport const ɵlazySDKProxy = (klass, observable, zone) => {\n    return new Proxy(klass, {\n        get: (_, name) => zone.runOutsideAngular(() => {\n            if (klass[name]) {\n                return klass[name];\n            }\n            if (noopFunctions.includes(name)) {\n                return () => { };\n            }\n            let promise = observable.toPromise().then(mod => {\n                const ret = mod && mod[name];\n                if (typeof ret == 'function') {\n                    return ret.bind(mod);\n                }\n                else if (ret && ret.then) {\n                    return ret.then((res) => zone.run(() => res));\n                }\n                else {\n                    return zone.run(() => ret);\n                }\n            });\n            return new Proxy(() => undefined, {\n                get: (_, name) => promise[name],\n                apply: (self, _, args) => promise.then(it => it && it(...args))\n            });\n        })\n    });\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}